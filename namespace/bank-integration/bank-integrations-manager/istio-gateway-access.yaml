apiVersion: v1
kind: Service
metadata:
  name: bain-api
  labels:
    app: bank-integrations-manager
    app.kubernetes.io/name: bank-integrations-manager
spec:
  ports:
    - name: http
      port: 80
      targetPort: 443
      protocol: TCP
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: bain-api-virtual-service
  namespace: bank-integration
spec:
  hosts:
    - bain-api
  http:
    - name: "first-call"
      match:
        - uri:
            prefix: /api
      route:
        - destination:
            port:
              number: 80
            host: bank-integrations-manager
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: override-xfcc
  namespace: bank-integration
spec:
  workloadSelector:
    labels:
      app: bank-integrations-manager  # Target the specific workload
  configPatches:
    # The first patch adds the lua filter to the listener/http connection manager
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        listener:
          portNumber: 8080
          filterChain:
            filter:
              name: "envoy.filters.network.http_connection_manager"
              subFilter:
                name: "envoy.filters.http.router"
      patch:
        operation: INSERT_BEFORE
        value: # lua filter specification
          name: envoy.filters.http.lua
          typed_config:
            "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua"
            defaultSourceCode:
              inlineString: |
                function envoy_on_request(request_handle)
                  local headers = request_handle:headers()
                  request_handle:streamInfo():dynamicMetadata():set("envoy.filters.http.lua", "request.info", {
                     original_cert = headers:get("original-x-forwarded-client-cert"),
                     headers:add("x-forwarded-client-cert", original_cert),
                  })
                end
    # The second patch add
